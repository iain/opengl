#!/usr/bin/env ruby -I lib -w

require 'environment'

require 'models/spaceship'
require 'views/fuselage'

class SpaceWars < Controller

  on "w" do
    spaceship.pitch_down
  end

  on "s" do
    spaceship.pitch_up
  end

  on "a" do
    spaceship.roll_left
  end

  on "d" do
    spaceship.roll_right
  end

  on "z" do
    spaceship.yaw_left
  end

  on "c" do
    spaceship.yaw_right
  end

  on "x" do
    spaceship.reset_rotation
  end

  on '[' do
    spaceship.accelerate
  end

  on '\'' do
    spaceship.brake
  end

  on "=" do
    $camera.zoom_in
  end

  on "-" do
    $camera.zoom_out
  end

  on "h" do
    $camera.roll(-0.1)
  end

  on "j" do
    $camera.pitch( 0.1)
  end

  on "k" do
    $camera.pitch(-0.1)
  end

  on "l" do
    $camera.roll( 0.1)
  end

  on "f" do
    window.enter_full_screen
  end

  on "F" do
    window.leave_full_screen
  end

  on "q" do
    exit
  end

  def spaceship
    @spaceship ||= Spaceship.new
  end

  def grid
    @grid ||= Grid.new
  end

  def on_tick
    spaceship.animate
  end

end

class Grid
  include Magick

  attr_accessor :data

  def initialize
    @width      = 0
    @height     = 0
    self.data   = []

    load_world
  end

  def width
    @width
  end

  def height
    @height
  end

  def load_world
    world = ImageList.new('world.png')

    @width  = world.rows
    @height = world.columns

    data = world.view(0,0,@height,@width)
    @height.times do |width|
      @width.times do |height|
        self.data << [
          width - 64,
          height - 64,
          [
            ((data[width][height].red)/65535),
            ((data[width][height].green)/65535),
            ((data[width][height].blue)/65535)
          ]
        ]
      end
    end
  end
end

class GridView < View
  def draw!
    @model.data.each do |info|
      drawField(*info)
    end
  end

  def drawField x, z, color
    field_size = 0.5
    glColor(*color)
    glBegin(GL_QUADS)
    glVertex(-0.5 + x, 0, 0.5 + z)
    glVertex(-0.5 + x, 0,-0.5 + z)
    glVertex( 0.5 + x, 0,-0.5 + z)
    glVertex( 0.5 + x, 0, 0.5 + z)
    glEnd
  end

end

space_wars = SpaceWars.new

window = Window.new(space_wars)
textures = {
  :wooden_box => ['Wood_Box_Texture_by_jackzeenho.bmp',512,512]
}

window.textures.add(textures)

$camera = Camera.new(-25)
$camera.pitch(Math::PI/2)
$camera.roll(-Math::PI/2)

window.views << CameraView.new($camera)
window.views << GridView.new(space_wars.grid)
#window.views << Fuselage.new(space_wars.spaceship)

$window = window

#not sure where textures should be loaded. For one they _must_ be loaded after the window is generated.
#Perhaps a model should have his own stack of textures. But Im not sure if GenTextures can be called multiple times without wiping the stack.

window.start
