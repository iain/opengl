#!/usr/bin/env ruby -I lib -w

require 'environment'

class SpaceWars < Controller

  on "w" do
    spaceship.size *= 1.1
  end

  on "s" do
    spaceship.size *= 0.9
  end

  on "a" do
    spaceship.turn_left
  end

  on "d" do
    spaceship.turn_right
  end

  on "=" do
    $camera.zoom_in
  end

  on "-" do
    $camera.zoom_out
  end

  on "h" do
    $camera.roll(-0.1)
  end

  on "j" do
    $camera.pitch( 0.1)
  end

  on "k" do
    $camera.pitch(-0.1)
  end

  on "l" do
    $camera.roll( 0.1)
  end

  on "q" do
    exit
  end

  def spaceship
    @spaceship ||= Spaceship.new
  end

  def on_tick
    spaceship.animate
  end

end


class Spaceship

  attr_accessor :size

  def initialize
    @size = 0.5
  end

  def animate
    rotator.yaw!(0.01)
  end

  def rotation
    rotator.matrix
  end

  def turn_left
    rotator.roll!(0.1)
  end

  def turn_right
    rotator.roll!(-0.1)
  end

  private

  def rotator
    @rotator ||= Rotator.new
  end

end


class Fuselage < View

  def draw
    glMultMatrix(@model.rotation)

    texture = $window.textures.find(:earth)

    quadro = gluNewQuadric();
    gluQuadricNormals(quadro, GLU_SMOOTH);
    gluQuadricTexture(quadro, GL_TRUE);
    glEnable(GL_TEXTURE_2D);

    glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE);
    glBindTexture(GL_TEXTURE_2D, texture);
    gluSphere(quadro, 5000, 48, 48);
    glDisable(GL_TEXTURE_2D);
    gluDeleteQuadric(quadro);
  end

end

class Camera

  def initialize(zoom = 0)
    @zoom = zoom
  end

  def zoom_in
    @zoom *= 0.9
  end

  def zoom_out
    @zoom *= 1.1
  end

  def roll(r)
    rotator.roll!(r)
  end

  def pitch(r)
    rotator.pitch!(r)
  end

  def rotation
    rotator.matrix + rotator.translate(0, 0, @zoom)
  end

  private

  def rotator
    @rotator ||= Rotator.new
  end

end

class CameraView < View

  def draw!
    glMultMatrix(@model.rotation)
  end

end

space_wars = SpaceWars.new
window = Window.new(space_wars)
textures = {
  :wooden_box => ['Wood_Box_Texture_by_jackzeenho.bmp',512,512],
  :jupiter => ['jupitermap.bmp',1024,512],
  :pluto => ['plutomap.bmp',1000,500],
  :earth => ['earthmap.bmp',1000,500]
}

window.textures.add(textures)

$camera = Camera.new(-4)
$camera.pitch(Math::PI/2)

window.views << CameraView.new($camera)
window.views << Fuselage.new(space_wars.spaceship)

$window = window

#not sure where textures should be loaded. For one they _must_ be loaded after the window is generated.
#Perhaps a model should have his own stack of textures. But Im not sure if GenTextures can be called multiple times without wiping the stack.

window.start
